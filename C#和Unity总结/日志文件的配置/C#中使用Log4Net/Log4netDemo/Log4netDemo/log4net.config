<?xml version="1.0" encoding="utf-8" ?>
<!--配置文件-->
<configuration>
  
  <!--设置自定义配置文件：添加对Log4Net的程序集的引用-->
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>
  <!--log4net具体设置-->
  <log4net>
    <!--输出到控制台的标准输出流-->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <!--以下是日志输出格式-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern"  value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>
    <!--输出到文件夹中(这个文件夹会滚动记录日志：即按规定一个文件满了就会自动继续写下一个文件)-->
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--下面设置文件属性-->
      
      <!--设置日志文件的路径-->
      <!--下面这种输出路径是：输出目录\Log\LogFile-->
      <!--还可以自定义文件路径：D:\Log\LogFile-->
      <param name ="File"  value="Log\LogFile.log"/>
      
      <!--设置是否追加到文件：即新的日志会叠加到原来的日志的文件中，而不是创建新的日志文件-->
      <param name ="AppendToFile"  value="True"/>
      
      <!--设置日志文件回滚Rolling的方式-->
      <!--方法1：以日志文件的大小Size为依据：日志文件大于100KB,创建新文件，每天只留下最新的10个文件-->
      <!--<rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="100KB" />-->
      <!--方法2：以Date日期来创建文件：每天一份文件-->
      <rollingStyle value="Date" />
      <datePattern value="yyyyMMdd-HHmm" />
      <!--方法3 Composite：综合方法1和方法2：-->
      <param name="RollingStyle"  value="Composite"/>
      <!--日期的格式：创建文件的时间-->
      <param name ="DatePattern"  value="yyyy-MM-dd HH：mm：ss"/>
      <!--每日日志文件的数量 -1:表示无限制-->
      <maxSizeRollBackups value="10" />
      <!--每份日志文件的大小-->
      <param name ="MaximumFileSize"  value="1MB" />
      
      <!--设置日志文件名是否为静态：False：表示每份日志的文件名都会加上时间后缀-->
      <param name ="StaticLogFileName"  value="False"/>

      <!--以下是日志输出格式-->
      <layout type="log4net.Layout.PatternLayout,log4net">
        <!--param name ="A" value = "B" :可以简化成 A value = "B"     property{NDC}:表示出错类-->
        <ConversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>
    <!--输出到SQLite数据库-->
    <appender name="SQLite_AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <!--缓存长度：当有1条以上的日志时，就输出 -->
      <bufferSize value="1" />
      <!--System.Data.SQLite.SQLiteConnection:表示连接要用到的连接器SQLiteConnection-->
      <!--System.Data.SQLite,Version=1.0.108.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139 :表示引用的dll文件的信息 -->
      <!--可以通过使用dll文件中任意函数，然后按F12进入dll文件，在最上方就有这三个信息-->
      <connectionType value="System.Data.SQLite.SQLiteConnection, System.Data.SQLite,Version=1.0.108.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139" />
      <!--数据库路径：需要先创建好(.sqlite和.db都可以)-->
      <connectionString value="Data Source=D:\Desktop\mydatabase.db;" />
      <!--数据库中需要先创建好表格-->
      <commandText value="INSERT INTO test (Date, Level, Logger, Message) VALUES (@Date, @Level, @Logger, @Message)" />
      <!--参数组-->
      <parameter>
        <parameterName value="@Date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@Level" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Logger" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Message" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
    </appender>
    <!--输出到MySQL数据库-->
    <appender name ="MySql_AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <!--缓存长度：当有1条以上的日志时，就输出 -->
      <bufferSize value="1" />
      <!--MySql.Data.MySqlClient.MySqlConnection : 表示连接要用到的连接器-->
      <!--MySql.Data,Version=6.9.9.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d :表示引用的dll文件的信息 -->
      <param name="ConnectionType" value="MySql.Data.MySqlClient.MySqlConnection, MySql.Data,Version=6.9.9.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d"/>
      <!-- ConnectionString : MySQL连接的信息，跟SQLite是不同的 -->
      <param name="ConnectionString" value="server=localhost;port = 3306;database=log4nettest;UserId=log;Password=123;"/>
      <!-- SQL语句，插入语句 需要跟 表中的属性一致-->
      <commandText value="INSERT INTO adonetappender(dtDate,sThread,sLevel,sLogger,sMessage,sException) VALUES (@log_date, @log_Thread, @log_level, @log_Logger, @log_Message, @log_Exception)" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>   
      <parameter>
        <parameterName value="@log_Thread" />
        <dbType value="String" />
        <!--size 表示 预定长度，超过长度就会丢弃多的部分-->
        <size value="100" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="100" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_Logger" />
        <dbType value="String" />
        <size value="100" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_Message" />
        <dbType value="String" />
        <size value="1000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_Exception" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>
    
    <!--根记录器-->
    <root>
      <!--设置日志输出的等级：FATAL > ERROR > WARN > INFO > DEBUG   ALL(允许所有的日志请求)和OFF(拒绝所有的日志请求)，缺省为DEBUG-->
      <level value="ALL"/>
      <!--输出源的应用：上面设置了有什么，才能引用，可以不引用，不可以引用没有的-->
      <appender-ref ref="ConsoleAppender"/>
      <appender-ref ref="RollingFileAppender"/>
      <appender-ref ref ="SQLite_AdoNetAppender"/>
      <appender-ref ref ="MySql_AdoNetAppender"/>
    </root>
    <!--自定义记录器 -->
    <logger name = "Com" >
      <level value ="WARN"/>
    </logger>
    
  </log4net>
  <!--End站点日志配置部分-->
</configuration>